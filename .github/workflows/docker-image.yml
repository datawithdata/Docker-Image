name: Docker Image CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      REPOSITORY_NAME: ${{ github.repository }}
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: checkout
      uses: actions/checkout@v2
    
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
          role-to-assume: arn:aws:iam::270932919550:role/git-actions-iam 
          aws-region: us-east-1
    
    - name: setup python
      uses: actions/setup-python@v4
      with:
          python-version: '3.10' # install the python version needed
    
    - name: Install dependencies
      run: pip install boto3
      
    - name: download model
      run: |
            python download-model.py
            echo ${{ env }}
            printenv

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Check if ECR registry exists
      id: check-ecr
      run: |
            repository_exists=$(aws ecr describe-repositories | jq -r ".repositories[] | select(.repositoryName == \"${{ github.event.repository.name }}\")")
            echo "$repository_exists"
    
    - name: Create ECR registry (if needed)
      id: create-ecr
      run: |
            if  [[ -n $repository_exists ]]; then
              aws ecr create-repository --repository-name ${{ github.event.repository.name }}
            fi
      
    - name: Build the Docker image
      run: |
          docker build -t ${{ github.event.repository.name }} .
          docker tag ${{ github.event.repository.name }}:latest ${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:${{ env.MY_VAR }}
    
    - name: Docker Push
      run: |
          set -e
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:${{ env.MY_VAR }}
